syntax = "proto3";
option java_package = "org.iota.rpchub";

package hub.rpc;
import "proto/messages.proto";

service Hub {
  // Creates a new user on the Hub
  rpc CreateUser (CreateUserRequest) returns (CreateUserReply);
  // Returns the available balance for a user
  rpc GetBalance (GetBalanceRequest) returns (GetBalanceReply);
  // Creates a new deposit address for a user
  rpc GetDepositAddress (GetDepositAddressRequest) returns (GetDepositAddressReply);
  // Submits a withdrawal request for a user.
  rpc UserWithdraw (UserWithdrawRequest) returns (UserWithdrawReply);
  // Attempts to cancel a user's withdrawal request.
  // Only possible as long as sweep hasn't started yet.
  rpc UserWithdrawCancel (UserWithdrawCancelRequest) returns (UserWithdrawCancelReply);
  // Returns a user's full balance change history as recorded by the Hub
  rpc GetUserHistory (GetUserHistoryRequest) returns (GetUserHistoryReply);
  // Processes a batch of buys/sells from the exchange
  // Note that the amounts of this batch must sum to 0!
  rpc ProcessTransferBatch (ProcessTransferBatchRequest) returns (ProcessTransferBatchReply);
  // Produces a stream of all user balance changes as they appear since the provided timestamp
  rpc UserBalanceSubscription (UserBalanceSubscriptionRequest) returns (stream UserBalanceEvent);
  // Provides statistics about the Hub
  rpc GetStats (StatsRequest) returns (StatsReply);
  // Produces a stream of all sweeps since the provided timestamp
  rpc SweepSubscription (SweepSubscriptionRequest) returns (stream SweepEvent);
  // Provides information on an address if it's owned by the Hub
  rpc GetAddressInfo (GetAddressInfoRequest) returns (GetAddressInfoReply);
}

